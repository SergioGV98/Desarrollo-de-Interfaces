// Generated by view binder compiler. Do not edit!
package com.moronlu18.customercreation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.mikhaellopez.circularimageview.CircularImageView;
import com.moronlu18.customercreation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCustomerCreationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CircularImageView circularImageView;

  @NonNull
  public final Button customerCreationBtnSave;

  @NonNull
  public final ConstraintLayout customerCreationClayoutCustomer;

  @NonNull
  public final CardView customerCreationCvImgCustomer;

  @NonNull
  public final Guideline customerCreationGlEnd;

  @NonNull
  public final Guideline customerCreationGlStart;

  @NonNull
  public final Guideline customerCreationGlTop;

  @NonNull
  public final ImageButton customerCreationImgbtnCustomer;

  @NonNull
  public final TextInputEditText customerCreationTietAddress;

  @NonNull
  public final TextInputEditText customerCreationTietCity;

  @NonNull
  public final TextInputEditText customerCreationTietEmailCustomer;

  @NonNull
  public final TextInputEditText customerCreationTietNameCustomer;

  @NonNull
  public final TextInputEditText customerCreationTietPhone;

  @NonNull
  public final TextInputLayout customerCreationTilAddress;

  @NonNull
  public final TextInputLayout customerCreationTilCity;

  @NonNull
  public final TextInputLayout customerCreationTilCustomerEmail;

  @NonNull
  public final TextInputLayout customerCreationTilNameCustomer;

  @NonNull
  public final TextInputLayout customerCreationTilPhone;

  private FragmentCustomerCreationBinding(@NonNull ConstraintLayout rootView,
      @NonNull CircularImageView circularImageView, @NonNull Button customerCreationBtnSave,
      @NonNull ConstraintLayout customerCreationClayoutCustomer,
      @NonNull CardView customerCreationCvImgCustomer, @NonNull Guideline customerCreationGlEnd,
      @NonNull Guideline customerCreationGlStart, @NonNull Guideline customerCreationGlTop,
      @NonNull ImageButton customerCreationImgbtnCustomer,
      @NonNull TextInputEditText customerCreationTietAddress,
      @NonNull TextInputEditText customerCreationTietCity,
      @NonNull TextInputEditText customerCreationTietEmailCustomer,
      @NonNull TextInputEditText customerCreationTietNameCustomer,
      @NonNull TextInputEditText customerCreationTietPhone,
      @NonNull TextInputLayout customerCreationTilAddress,
      @NonNull TextInputLayout customerCreationTilCity,
      @NonNull TextInputLayout customerCreationTilCustomerEmail,
      @NonNull TextInputLayout customerCreationTilNameCustomer,
      @NonNull TextInputLayout customerCreationTilPhone) {
    this.rootView = rootView;
    this.circularImageView = circularImageView;
    this.customerCreationBtnSave = customerCreationBtnSave;
    this.customerCreationClayoutCustomer = customerCreationClayoutCustomer;
    this.customerCreationCvImgCustomer = customerCreationCvImgCustomer;
    this.customerCreationGlEnd = customerCreationGlEnd;
    this.customerCreationGlStart = customerCreationGlStart;
    this.customerCreationGlTop = customerCreationGlTop;
    this.customerCreationImgbtnCustomer = customerCreationImgbtnCustomer;
    this.customerCreationTietAddress = customerCreationTietAddress;
    this.customerCreationTietCity = customerCreationTietCity;
    this.customerCreationTietEmailCustomer = customerCreationTietEmailCustomer;
    this.customerCreationTietNameCustomer = customerCreationTietNameCustomer;
    this.customerCreationTietPhone = customerCreationTietPhone;
    this.customerCreationTilAddress = customerCreationTilAddress;
    this.customerCreationTilCity = customerCreationTilCity;
    this.customerCreationTilCustomerEmail = customerCreationTilCustomerEmail;
    this.customerCreationTilNameCustomer = customerCreationTilNameCustomer;
    this.customerCreationTilPhone = customerCreationTilPhone;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCustomerCreationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCustomerCreationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_customer_creation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCustomerCreationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.circularImageView;
      CircularImageView circularImageView = ViewBindings.findChildViewById(rootView, id);
      if (circularImageView == null) {
        break missingId;
      }

      id = R.id.customer_creation_btnSave;
      Button customerCreationBtnSave = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationBtnSave == null) {
        break missingId;
      }

      ConstraintLayout customerCreationClayoutCustomer = (ConstraintLayout) rootView;

      id = R.id.customer_creation_cvImgCustomer;
      CardView customerCreationCvImgCustomer = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationCvImgCustomer == null) {
        break missingId;
      }

      id = R.id.customer_creation_glEnd;
      Guideline customerCreationGlEnd = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationGlEnd == null) {
        break missingId;
      }

      id = R.id.customer_creation_glStart;
      Guideline customerCreationGlStart = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationGlStart == null) {
        break missingId;
      }

      id = R.id.customer_creation_glTop;
      Guideline customerCreationGlTop = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationGlTop == null) {
        break missingId;
      }

      id = R.id.customer_creation_imgbtnCustomer;
      ImageButton customerCreationImgbtnCustomer = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationImgbtnCustomer == null) {
        break missingId;
      }

      id = R.id.customer_creation_tietAddress;
      TextInputEditText customerCreationTietAddress = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTietAddress == null) {
        break missingId;
      }

      id = R.id.customer_creation_tietCity;
      TextInputEditText customerCreationTietCity = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTietCity == null) {
        break missingId;
      }

      id = R.id.customer_creation_tietEmailCustomer;
      TextInputEditText customerCreationTietEmailCustomer = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTietEmailCustomer == null) {
        break missingId;
      }

      id = R.id.customer_creation_tietNameCustomer;
      TextInputEditText customerCreationTietNameCustomer = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTietNameCustomer == null) {
        break missingId;
      }

      id = R.id.customer_creation_tietPhone;
      TextInputEditText customerCreationTietPhone = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTietPhone == null) {
        break missingId;
      }

      id = R.id.customer_creation_tilAddress;
      TextInputLayout customerCreationTilAddress = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTilAddress == null) {
        break missingId;
      }

      id = R.id.customer_creation_tilCity;
      TextInputLayout customerCreationTilCity = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTilCity == null) {
        break missingId;
      }

      id = R.id.customer_creation_tilCustomerEmail;
      TextInputLayout customerCreationTilCustomerEmail = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTilCustomerEmail == null) {
        break missingId;
      }

      id = R.id.customer_creation_tilNameCustomer;
      TextInputLayout customerCreationTilNameCustomer = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTilNameCustomer == null) {
        break missingId;
      }

      id = R.id.customer_creation_tilPhone;
      TextInputLayout customerCreationTilPhone = ViewBindings.findChildViewById(rootView, id);
      if (customerCreationTilPhone == null) {
        break missingId;
      }

      return new FragmentCustomerCreationBinding((ConstraintLayout) rootView, circularImageView,
          customerCreationBtnSave, customerCreationClayoutCustomer, customerCreationCvImgCustomer,
          customerCreationGlEnd, customerCreationGlStart, customerCreationGlTop,
          customerCreationImgbtnCustomer, customerCreationTietAddress, customerCreationTietCity,
          customerCreationTietEmailCustomer, customerCreationTietNameCustomer,
          customerCreationTietPhone, customerCreationTilAddress, customerCreationTilCity,
          customerCreationTilCustomerEmail, customerCreationTilNameCustomer,
          customerCreationTilPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
